syntax = "proto3";
import "erp/order/SaleDownEntity.proto";
import "BaseEntity.proto";
package b2b.erp.order;

option java_multiple_files = true;
option java_package = "com.usoft.b2b.external.erp.order.api.protobuf";
option java_outer_classname = "ISaleDownServiceProto";

service ISaleDownService {

    //获取所有待上传到卖家erp的订单 -restAPI /erp/sale, method:get, type:json
    rpc getSaleDownList(GetSaleDownListReq) returns (GetSaleDownListResp) { }
    //平台的订单传到卖方ERP之后，修改平台里面的订单的上传状态 -restAPI /erp/sale, method:post, type:string
    rpc updateSaleDownStatus(UpdateSaleDownStatusReq) returns (UpdateSaleDownStatusResp) { }
    //卖家ERP从平台获取在平台回复的记录 -restAPI /erp/sale/reply, method:get, type:json
    rpc getSaleReplyList(GetSaleReplyListReq) returns (GetSaleReplyListResp) { }
    //平台的回复记录传到供应商ERP之后，修改平台里面的回复记录的上传状态 -restAPI /erp/sale/reply/back, method:post, type:string
    rpc updateSaleReplyStatus(UpdateSaleReplyStatusReq) returns (UpdateSaleReplyStatusResp) { }
    //卖家ERP从平台获取结案、反结案客户采购单 -restAPI /erp/sale/end, method:get, type:json
    rpc getSaleDownDetailEnd(GetSaleDownDetailEndReq) returns (GetSaleDownDetailEndResp) { }
    //平台的结案、反结案客户采购单传到供应商ERP之后，修改平台里面的上传状态 -restAPI /erp/sale/end/back, method:post, type:string
    rpc updateSaleDownDetailEndReq(UpdateSaleDownDetailEndReq) returns (UpdateSaleDownDetailEndResp) { }
}

//获取所有待上传到卖家erp的订单  请求参数
message GetSaleDownListReq {

}

//获取所有待上传到卖家erp的订单  响应参数
message GetSaleDownListResp {
    RespHeader respHeader = 1; // 响应体
    repeated SaleDown saleDownList = 2;//采购单集合
}

//平台的订单传到卖方ERP之后，修改平台里面的订单的上传状态  请求参数
message UpdateSaleDownStatusReq {
    string idStr = 1; //上传成功的订单id
}

//平台的订单传到卖方ERP之后，修改平台里面的订单的上传状态  响应参数
message UpdateSaleDownStatusResp {
    RespHeader respHeader = 1;// 响应头
}

//卖家ERP从平台获取在平台回复的记录  请求参数
message GetSaleReplyListReq {
    repeated SaleReply saleReplyList = 1; //回复记录集合
}

//卖家ERP从平台获取在平台回复的记录  响应参数
message GetSaleReplyListResp {
    RespHeader respHeader = 1;// 响应头
}

//平台的回复记录传到供应商ERP之后，修改平台里面的回复记录的上传状态  请求参数
message UpdateSaleReplyStatusReq {
    string idStr = 1; //上传成功的回复记录id
}

//平台的回复记录传到供应商ERP之后，修改平台里面的回复记录的上传状态  响应参数
message UpdateSaleReplyStatusResp {
    RespHeader respHeader = 1;// 响应头
}

//卖家ERP从平台获取结案、反结案客户采购单  请求参数
message GetSaleDownDetailEndReq {
}

//卖家ERP从平台获取结案、反结案客户采购单  响应参数
message GetSaleDownDetailEndResp {
    RespHeader respHeader = 1;// 响应头
    repeated SaleDownDetailEnd detailEndList = 2; //结案、反结案的客户采购单
}

//平台的结案、反结案客户采购单传到供应商ERP之后，修改平台里面的上传状态  请求参数
message UpdateSaleDownDetailEndReq {
    string idStr = 1; //上传成功的结案、反结案的客户采购单明细id
}

//平台的结案、反结案客户采购单传到供应商ERP之后，修改平台里面的上传状态  响应参数
message UpdateSaleDownDetailEndResp {
    RespHeader respHeader = 1;// 响应头
}