syntax = "proto3";
import "erp/order/SaleDownChangeEntity.proto";
import "BaseEntity.proto";
package b2b.erp.order;

option java_multiple_files = true;
option java_package = "com.usoft.b2b.external.erp.order.api.protobuf";
option java_outer_classname = "ISaleDownChangeServiceProto";

service ISaleDownChangeService {

    //卖家ERP从平台获取待上传的采购变更单  -restAPI /erp/sale/change, method:get, type:json
    rpc getSaleDownChangeList(GetSaleDownChangeListReq) returns(GetSaleDownChangeListResp);
    //平台的变更单传到供应商ERP之后，修改平台里面的变更单的上传状态  -restAPI /erp/sale/change, method:post, type:string
    rpc updateSaleDownChangeStatus(UpdateSaleDownChangeStatusReq) returns(UpdateSaleDownChangeStatusResp);
    //将卖家ERP的变更单回复信息写到平台  -restAPI /erp/sale/change/reply, method:post, type:json
    rpc saveSaleDownChangeReply(SaveSaleDownChangeReplyReq) returns(SaveSaleDownChangeReplyResp);
    //卖家ERP从平台获取在平台回复的记录  -restAPI /erp/sale/change/reply, method:get, type:json
    rpc getSaleDownChangeReplyList(GetSaleDownChangeReplyListReq) returns(GetSaleDownChangeReplyListResp);
    //平台的回复信息传到供应商ERP之后，修改平台里面的变更单的回复信息上传状态  -restAPI /erp/sale/change/reply/back, method:post, type:json
    rpc updateSaleDownChangeReplyStatus(UpdateSaleDownChangeReplyStatusReq) returns(UpdateSaleDownChangeReplyStatusResp);
}

//卖家ERP从平台获取待上传的采购变更单  请求参数
message GetSaleDownChangeListReq {
}

//卖家ERP从平台获取待上传的采购变更单 响应参数
message GetSaleDownChangeListResp {
    RespHeader respHeader = 1; // 响应体
    repeated SaleDownChange saleDownChangeList = 2; //采购变更单集合
}

//平台的变更单传到供应商ERP之后，修改平台里面的变更单的上传状态  请求参数
message UpdateSaleDownChangeStatusReq {
    string idStr = 1; //上传成功的采购变更单id字符串
}

//平台的变更单传到供应商ERP之后，修改平台里面的变更单的上传状态 响应参数
message UpdateSaleDownChangeStatusResp {
    RespHeader respHeader = 1; // 响应体
}

//将卖家ERP的变更单回复信息写到平台  请求参数
message SaveSaleDownChangeReplyReq {
    repeated SaleDownChangeReply changeReplyList = 1; //卖家ERP的变更单回复信息
}

//将卖家ERP的变更单回复信息写到平台  响应参数
message SaveSaleDownChangeReplyResp {
    RespHeader respHeader = 1; // 响应体
    repeated SaleDownChangeReply changeReplyList = 2; //上传成功的卖家ERP的变更单回复信息
}

//卖家ERP从平台获取在平台回复的记录  请求参数
message GetSaleDownChangeReplyListReq {
}

//卖家ERP从平台获取在平台回复的记录  响应参数
message GetSaleDownChangeReplyListResp {
    RespHeader respHeader = 1; // 响应体
    repeated SaleDownChangeReply changeReplyList = 2; //卖家E在平台回复的的变更单回复信息
}

//平台的回复信息传到供应商ERP之后，修改平台里面的变更单的回复信息上传状态  请求参数
message UpdateSaleDownChangeReplyStatusReq {
    string idStr = 1; //上传成功的平台的回复信息的id字符串
}

//平台的回复信息传到供应商ERP之后，修改平台里面的变更单的回复信息上传状态  响应参数
message UpdateSaleDownChangeReplyStatusResp {
    RespHeader respHeader = 1; // 响应体
}